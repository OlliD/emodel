/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.unibi.agai.emodel.emotionstrategyselector.robotconnector;
 

import de.unibi.flobi.Actuators;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.EnumMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.logging.Level;
import java.util.logging.Logger;
import nu.xom.Attribute;
import nu.xom.Document;
import nu.xom.Element;
import nu.xom.ParsingException;

/**
 *
 * @author akipp
 */
//TODO configure eye tilt, neck complete
public class HCGui extends javax.swing.JFrame {

    Robot r;
    HeadPositions hp;

    /**
     * Creates new form EmoGui
     */
    public HCGui(Robot r, HeadPositions hp) {
        initComponents();
        this.r = r;
        this.hp = hp; 
        List<String> poses = new ArrayList();
        for (String s : hp.getPositions().keySet()) {
            poses.add(s);
            //cbPos.addItem(s);
        }
        Collections.sort(poses);
        for (String s : poses) {
            cbPos.addItem(s);
        }
        try {
            lid_l_upper.setMaximum((int) (r.getMax(Actuators.left_lid_upper) * 100));
            lid_l_upper.setMinimum((int) (r.getMin(Actuators.left_lid_upper) * 100));

            lid_l_lower.setMaximum((int) (r.getMin(Actuators.left_lid_lower) * 100));
            lid_l_lower.setMinimum((int) (r.getMax(Actuators.left_lid_lower) * 100));

            lid_r_upper.setMaximum((int) (r.getMin(Actuators.right_lid_upper) * 100));
            lid_r_upper.setMinimum((int) (r.getMax(Actuators.right_lid_upper) * 100));

            lid_r_lower.setMaximum((int) (r.getMax(Actuators.right_lid_lower) * 100));
            lid_r_lower.setMinimum((int) (r.getMin(Actuators.right_lid_lower) * 100));

            eyebrow_left.setMaximum((int) (r.getMax(Actuators.left_eyebrow) * 100));
            eyebrow_left.setMinimum((int) (r.getMin(Actuators.left_eyebrow) * 100));

            eyebrow_right.setMaximum((int) (r.getMax(Actuators.right_eyebrow) * 100));
            eyebrow_right.setMinimum((int) (r.getMin(Actuators.right_eyebrow) * 100));

            lip_left.setMaximum((int) (r.getMax(Actuators.lip_left_upper) * 100));
            lip_left.setMinimum((int) (r.getMin(Actuators.lip_left_upper) * 100));

            lip_right.setMaximum((int) (r.getMin(Actuators.lip_right_upper) * 100));
            lip_right.setMinimum((int) (r.getMax(Actuators.lip_right_upper) * 100));

            lip_center_down.setMaximum((int) (r.getMin(Actuators.lip_center_lower) * 100));
            lip_center_down.setMinimum((int) (r.getMax(Actuators.lip_center_lower) * 100));

            lip_center_up.setMaximum((int) (r.getMax(Actuators.lip_center_upper) * 100));
            lip_center_up.setMinimum((int) (r.getMin(Actuators.lip_center_upper) * 100));

            neck_pan.setMaximum((int) (r.getMax(Actuators.neck_pan) * 100));
            neck_pan.setMinimum((int) (r.getMin(Actuators.neck_pan) * 100));

            neck_tilt.setMaximum((int) (r.getMax(Actuators.neck_tilt) * 100));
            neck_tilt.setMinimum((int) (r.getMin(Actuators.neck_tilt) * 100));

            neck_roll.setMaximum((int) (r.getMin(Actuators.neck_roll) * 100));
            neck_roll.setMinimum((int) (r.getMax(Actuators.neck_roll) * 100));

            eye_left.setMaximum((int) (r.getMin(Actuators.left_eye_pan) * 100));
            eye_left.setMinimum((int) (r.getMax(Actuators.left_eye_pan) * 100));

            eye_right.setMaximum((int) (r.getMin(Actuators.right_eye_pan) * 100));
            eye_right.setMinimum((int) (r.getMax(Actuators.right_eye_pan) * 100));

            eye_tilt.setMaximum((int) (r.getMin(Actuators.eye_tilt) * 100));
            eye_tilt.setMinimum((int) (r.getMax(Actuators.eye_tilt) * 100));

        } catch (InterruptedException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
            System.exit(-1);
        } catch (IOException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
            System.exit(-1);
        } catch (NullPointerException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
            System.exit(-1);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTest = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        cb_r_lid_low = new javax.swing.JCheckBox();
        lbl_lid_right_down = new javax.swing.JLabel();
        lid_r_lower = new javax.swing.JSlider();
        jPanel7 = new javax.swing.JPanel();
        lid_r_upper = new javax.swing.JSlider();
        lbl_lid_right_up = new javax.swing.JLabel();
        cb_r_lid_up = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        lbl_lid_left_up = new javax.swing.JLabel();
        cb_l_lid_up = new javax.swing.JCheckBox();
        lid_l_upper = new javax.swing.JSlider();
        jPanel14 = new javax.swing.JPanel();
        lid_l_lower = new javax.swing.JSlider();
        lbl_lid_left_down = new javax.swing.JLabel();
        cb_l_lid_low = new javax.swing.JCheckBox();
        txtPosName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        lip_right = new javax.swing.JSlider();
        cb_lip_right = new javax.swing.JCheckBox();
        lbl_lip_right = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        lip_center_up = new javax.swing.JSlider();
        cb_lip_center_up = new javax.swing.JCheckBox();
        lbl_lip_center_up = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        lip_center_down = new javax.swing.JSlider();
        cb_lip_center_down = new javax.swing.JCheckBox();
        lbl_lip_center_down = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        cb_lip_left = new javax.swing.JCheckBox();
        lbl_lip_left = new javax.swing.JLabel();
        lip_left = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOut = new javax.swing.JTextArea();
        cbPos = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        eyebrow_right = new javax.swing.JSlider();
        cb_r_eyebrow = new javax.swing.JCheckBox();
        lbl_eyebrow_right = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        eyebrow_left = new javax.swing.JSlider();
        cb_l_eyebrow = new javax.swing.JCheckBox();
        lbl_eyebrow_left = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        eye_right = new javax.swing.JSlider();
        cb_eye_right = new javax.swing.JCheckBox();
        lbl_eye_right = new javax.swing.JLabel();
        eye_left = new javax.swing.JSlider();
        cb_eye_left = new javax.swing.JCheckBox();
        lbl_eye_left = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        eye_tilt = new javax.swing.JSlider();
        cb_eye_tilt = new javax.swing.JCheckBox();
        lbl_eye_tilt = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        lbl_neck_pan = new javax.swing.JLabel();
        cb_neck_pan = new javax.swing.JCheckBox();
        neck_pan = new javax.swing.JSlider();
        jPanel17 = new javax.swing.JPanel();
        cb_neck_tilt = new javax.swing.JCheckBox();
        neck_tilt = new javax.swing.JSlider();
        lbl_neck_tilt = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        cb_neck_roll = new javax.swing.JCheckBox();
        lbl_neck_roll = new javax.swing.JLabel();
        neck_roll = new javax.swing.JSlider();
        jPanel20 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtSpeed = new javax.swing.JTextField();
        txtRamp = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        txt_eyebrow_Speed = new javax.swing.JTextField();
        txt_eyebrow_ramp = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        txt_eye_speed = new javax.swing.JTextField();
        txt_eye_ramp = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jPanel26 = new javax.swing.JPanel();
        txt_lip_speed = new javax.swing.JTextField();
        txt_lip_ramp = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel27 = new javax.swing.JPanel();
        txt_lid_speed = new javax.swing.JTextField();
        txt_lid_ramp = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        txt_neck_speed = new javax.swing.JTextField();
        txt_neck_ramp = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        btnNeutral = new javax.swing.JButton();
        btnHappy = new javax.swing.JButton();
        btnSurprised = new javax.swing.JButton();
        btnAngry = new javax.swing.JButton();
        btnSad = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HeadControlGui");

        btnTest.setText("Test Position");
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Right Lid", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lower", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.black));

        cb_r_lid_low.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_r_lid_lowActionPerformed(evt);
            }
        });

        lbl_lid_right_down.setText("<value>");

        lid_r_lower.setMaximum(-1400);
        lid_r_lower.setMinimum(-2700);
        lid_r_lower.setOrientation(javax.swing.JSlider.VERTICAL);
        lid_r_lower.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lid_r_lowerStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(cb_r_lid_low)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lid_r_lower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_lid_right_down)))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addComponent(lid_r_lower, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_r_lid_low)
                    .addComponent(lbl_lid_right_down)))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Upper", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        lid_r_upper.setMaximum(3400);
        lid_r_upper.setMinimum(-600);
        lid_r_upper.setOrientation(javax.swing.JSlider.VERTICAL);
        lid_r_upper.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lid_r_upperStateChanged(evt);
            }
        });

        lbl_lid_right_up.setText("<value>");

        cb_r_lid_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_r_lid_upActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(cb_r_lid_up)
                .addGap(4, 4, 4)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lid_r_upper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_lid_right_up)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(lid_r_upper, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_r_lid_up)
                    .addComponent(lbl_lid_right_up)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Left Lid", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.black));

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Upper"));

        lbl_lid_left_up.setText("<value>");

        cb_l_lid_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_l_lid_upActionPerformed(evt);
            }
        });

        lid_l_upper.setMaximum(3400);
        lid_l_upper.setMinimum(-600);
        lid_l_upper.setOrientation(javax.swing.JSlider.VERTICAL);
        lid_l_upper.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lid_l_upperStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lid_l_upper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(cb_l_lid_up)
                        .addGap(4, 4, 4)
                        .addComponent(lbl_lid_left_up)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(lid_l_upper, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_lid_left_up)
                    .addComponent(cb_l_lid_up)))
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lower", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.black));

        lid_l_lower.setMaximum(-1500);
        lid_l_lower.setMinimum(-2800);
        lid_l_lower.setOrientation(javax.swing.JSlider.VERTICAL);
        lid_l_lower.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lid_l_lowerStateChanged(evt);
            }
        });

        lbl_lid_left_down.setText("<value>");

        cb_l_lid_low.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_l_lid_lowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(cb_l_lid_low)
                .addGap(2, 2, 2)
                .addComponent(lbl_lid_left_down)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lid_l_lower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(lid_l_lower, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_lid_left_down)
                    .addComponent(cb_l_lid_low))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        txtPosName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPosNameActionPerformed(evt);
            }
        });

        jLabel4.setText("PosName:");

        btnSave.setText("Write Position");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Lips"));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Right", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        lip_right.setMaximum(3400);
        lip_right.setMinimum(2200);
        lip_right.setOrientation(javax.swing.JSlider.VERTICAL);
        lip_right.setPaintTicks(true);
        lip_right.setInverted(true);
        lip_right.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lip_rightStateChanged(evt);
            }
        });

        cb_lip_right.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_lip_rightActionPerformed(evt);
            }
        });

        lbl_lip_right.setText("<value>");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lip_right, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(cb_lip_right)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_lip_right)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addComponent(lip_right, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cb_lip_right, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_lip_right, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Center Up", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        lip_center_up.setMaximum(2800);
        lip_center_up.setMinimum(1700);
        lip_center_up.setOrientation(javax.swing.JSlider.VERTICAL);
        lip_center_up.setInverted(true);
        lip_center_up.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lip_center_upStateChanged(evt);
            }
        });

        cb_lip_center_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_lip_center_upActionPerformed(evt);
            }
        });

        lbl_lip_center_up.setText("<value>");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(cb_lip_center_up)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_lip_center_up))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lip_center_up, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addComponent(lip_center_up, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_lip_center_up)
                    .addComponent(cb_lip_center_up)))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Center Down"));

        lip_center_down.setMaximum(4200);
        lip_center_down.setMinimum(3600);
        lip_center_down.setOrientation(javax.swing.JSlider.VERTICAL);
        lip_center_down.setInverted(true);
        lip_center_down.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lip_center_downStateChanged(evt);
            }
        });

        cb_lip_center_down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_lip_center_downActionPerformed(evt);
            }
        });

        lbl_lip_center_down.setText("<value>");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(cb_lip_center_down)
                .addGap(1, 1, 1)
                .addComponent(lbl_lip_center_down)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lip_center_down, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addComponent(lip_center_down, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_lip_center_down)
                    .addComponent(cb_lip_center_down))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        cb_lip_left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_lip_leftActionPerformed(evt);
            }
        });

        lbl_lip_left.setText("<value>");
        lbl_lip_left.setName(""); // NOI18N

        lip_left.setMaximum(3300);
        lip_left.setMinimum(2200);
        lip_left.setOrientation(javax.swing.JSlider.VERTICAL);
        lip_left.setInverted(true);
        lip_left.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lip_leftStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(cb_lip_left)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_lip_left)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lip_left, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(lip_left, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_lip_left)
                    .addComponent(cb_lip_left))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        lbl_lip_left.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        txtOut.setColumns(20);
        txtOut.setLineWrap(true);
        txtOut.setRows(5);
        txtOut.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtOut);

        cbPos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbPosItemStateChanged(evt);
            }
        });
        cbPos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbPosPropertyChange(evt);
            }
        });

        jLabel13.setText("Positions");

        jButton1.setText("Reload Positions");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel14.setText("Loads the position.xml from");

        jLabel15.setText(" $prefix/share/HeadControl");

        jLabel16.setText("Position XML");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Right Eyebrow", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel4.setName(""); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(112, 73));

        eyebrow_right.setMaximum(-1400);
        eyebrow_right.setMinimum(-11900);
        eyebrow_right.setInverted(true);
        eyebrow_right.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                eyebrow_rightStateChanged(evt);
            }
        });
        eyebrow_right.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                eyebrow_rightPropertyChange(evt);
            }
        });

        cb_r_eyebrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_r_eyebrowActionPerformed(evt);
            }
        });

        lbl_eyebrow_right.setText("<value>");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(eyebrow_right, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cb_r_eyebrow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_eyebrow_right)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(eyebrow_right, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_eyebrow_right)
                    .addComponent(cb_r_eyebrow)))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left Eyebrow", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        eyebrow_left.setMaximum(-1400);
        eyebrow_left.setMinimum(-11900);
        eyebrow_left.setInverted(true);
        eyebrow_left.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                eyebrow_leftStateChanged(evt);
            }
        });

        cb_l_eyebrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_l_eyebrowActionPerformed(evt);
            }
        });

        lbl_eyebrow_left.setText("<value>");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(eyebrow_left, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(cb_l_eyebrow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_eyebrow_left))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(eyebrow_left, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_l_eyebrow)
                    .addComponent(lbl_eyebrow_left)))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eye Pan", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        eye_right.setMaximum(3400);
        eye_right.setMinimum(-600);
        eye_right.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                eye_rightStateChanged(evt);
            }
        });

        cb_eye_right.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_eye_rightActionPerformed(evt);
            }
        });

        lbl_eye_right.setText("<value>");

        eye_left.setMaximum(3400);
        eye_left.setMinimum(-600);
        eye_left.setPreferredSize(new java.awt.Dimension(200, 50));
        eye_left.setValueIsAdjusting(true);
        eye_left.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                eye_leftStateChanged(evt);
            }
        });

        cb_eye_left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_eye_leftActionPerformed(evt);
            }
        });

        lbl_eye_left.setText("<value>");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eye_right, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(cb_eye_right)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_eye_right)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(cb_eye_left)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_eye_left))
                    .addComponent(eye_left, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eye_right, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eye_left, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_eye_right)
                    .addComponent(cb_eye_right)
                    .addComponent(cb_eye_left)
                    .addComponent(lbl_eye_left)))
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eye Tilt", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        eye_tilt.setMaximum(1140);
        eye_tilt.setMinimum(-1108);
        eye_tilt.setOrientation(javax.swing.JSlider.VERTICAL);
        eye_tilt.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                eye_tiltStateChanged(evt);
            }
        });

        lbl_eye_tilt.setText("<value>");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(cb_eye_tilt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eye_tilt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_eye_tilt))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(eye_tilt, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_eye_tilt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cb_eye_tilt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder("Neck"));

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pan", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel16.setPreferredSize(new java.awt.Dimension(73, 144));

        lbl_neck_pan.setText("<value>");

        neck_pan.setMaximum(2220);
        neck_pan.setMinimum(-2320);
        neck_pan.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                neck_panStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(cb_neck_pan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_neck_pan))
            .addComponent(neck_pan, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addComponent(neck_pan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_neck_pan)
                    .addComponent(cb_neck_pan)))
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tilt", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        neck_tilt.setMaximum(1470);
        neck_tilt.setMinimum(-1700);
        neck_tilt.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                neck_tiltStateChanged(evt);
            }
        });

        lbl_neck_tilt.setText("<value>");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(cb_neck_tilt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_neck_tilt))
            .addComponent(neck_tilt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(neck_tilt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_neck_tilt)
                    .addComponent(lbl_neck_tilt)))
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Roll", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel18.setPreferredSize(new java.awt.Dimension(73, 144));

        lbl_neck_roll.setText("<value>");

        neck_roll.setMaximum(1480);
        neck_roll.setMinimum(-1250);
        neck_roll.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                neck_rollStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addComponent(cb_neck_roll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_neck_roll))
            .addComponent(neck_roll, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addComponent(neck_roll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_neck_roll)
                    .addComponent(cb_neck_roll)))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Speed/Ramp Settings", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Global", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel11.setText("Speed");

        txtSpeed.setText("3");
        txtSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSpeedActionPerformed(evt);
            }
        });

        txtRamp.setText("4");
        txtRamp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRampActionPerformed(evt);
            }
        });

        jLabel12.setText("Ramp");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRamp, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtRamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eyebrows", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        txt_eyebrow_Speed.setText("3");

        txt_eyebrow_ramp.setText("4");
        txt_eyebrow_ramp.setToolTipText("");

        jLabel18.setText("Ramp");

        jLabel17.setText("Speed");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_eyebrow_Speed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_eyebrow_ramp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17)
                    .addComponent(txt_eyebrow_Speed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_eyebrow_ramp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel18))))
        );

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eyes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        txt_eye_speed.setText("3");

        txt_eye_ramp.setText("4");
        txt_eye_ramp.setToolTipText("");

        jLabel23.setText("Ramp");

        jLabel24.setText("Speed");

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_eye_speed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_eye_ramp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel24)
                    .addComponent(txt_eye_speed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_eye_ramp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel23))))
        );

        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lips", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        txt_lip_speed.setText("3");

        txt_lip_ramp.setText("4");
        txt_lip_ramp.setToolTipText("");

        jLabel25.setText("Ramp");

        jLabel26.setText("Speed");

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_lip_speed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_lip_ramp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel26)
                    .addComponent(txt_lip_speed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_lip_ramp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel25))))
        );

        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lids", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        txt_lid_speed.setText("3");

        txt_lid_ramp.setText("4");
        txt_lid_ramp.setToolTipText("");

        jLabel27.setText("Ramp");

        jLabel28.setText("Speed");

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_lid_speed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_lid_ramp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel28)
                    .addComponent(txt_lid_speed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_lid_ramp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel27))))
        );

        jPanel28.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Neck", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        txt_neck_speed.setText("3");

        txt_neck_ramp.setText("4");
        txt_neck_ramp.setToolTipText("");

        jLabel29.setText("Ramp");

        jLabel30.setText("Speed");

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_neck_speed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_neck_ramp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel30)
                    .addComponent(txt_neck_speed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_neck_ramp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel29))))
        );

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
            .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        btnNeutral.setText("Neutral");
        btnNeutral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNeutralActionPerformed(evt);
            }
        });

        btnHappy.setText("Happy");
        btnHappy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHappyActionPerformed(evt);
            }
        });

        btnSurprised.setText("Surprised");
        btnSurprised.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSurprisedActionPerformed(evt);
            }
        });

        btnAngry.setText("Angry");
        btnAngry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAngryActionPerformed(evt);
            }
        });

        btnSad.setText("Sad");
        btnSad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(229, 229, 229)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnNeutral)
                                    .addComponent(btnHappy))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSurprised)
                                    .addComponent(btnAngry)
                                    .addComponent(btnSad))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jButton1)
                            .addComponent(jLabel4)))
                    .addComponent(jLabel16)
                    .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbPos, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTest, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(txtPosName, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(7, 7, 7)
                                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(35, 35, 35)
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPosName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(btnSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTest)
                                .addGap(18, 18, 18)
                                .addComponent(cbPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)))
                        .addComponent(jLabel16))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(btnSurprised)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNeutral)
                            .addComponent(btnAngry))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnHappy)
                            .addComponent(btnSad))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addGap(120, 120, 120))
        );

        jPanel4.getAccessibleContext().setAccessibleName("Eyebrows");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestActionPerformed
        // TODO add your handling code here:
        Map<Actuators, Float> actuatorList = new EnumMap<Actuators, Float>(Actuators.class);

        if (cb_l_lid_up.isSelected()) {
            Actuators act = Actuators.left_lid_upper;
            Float val = (float) lid_l_upper.getValue() / 100;
            actuatorList.put(act, val);
        }

        if (cb_l_lid_low.isSelected()) {
            Actuators act = Actuators.left_lid_lower;
            Float val = (float) lid_l_lower.getValue() / 100;
            actuatorList.put(act, val);
        }

        if (cb_r_lid_up.isSelected()) {
            Actuators act = Actuators.right_lid_upper;
            Float val = (float) lid_r_upper.getValue() / 100;
            actuatorList.put(act, val);
        }

        if (cb_r_lid_low.isSelected()) {
            Actuators act = Actuators.right_lid_lower;
            Float val = (float) lid_r_lower.getValue() / 100;
            actuatorList.put(act, val);
        }

        if (cb_l_eyebrow.isSelected()) {
            Actuators act = Actuators.left_eyebrow;
            Float val = (float) eyebrow_left.getValue() / 100;
            actuatorList.put(act, val);
        }
        if (cb_eye_left.isSelected()) {
            Actuators act = Actuators.left_eye_pan;
            Float val = (float) eye_left.getValue() / 100;
            actuatorList.put(act, val);
        }
        if (cb_eye_right.isSelected()) {
            Actuators act = Actuators.right_eye_pan;
            Float val = (float) eye_right.getValue() / 100;
            actuatorList.put(act, val);
        }

        if (cb_r_eyebrow.isSelected()) {
            Actuators act = Actuators.right_eyebrow;
            Float val = (float) eyebrow_right.getValue() / 100;
            actuatorList.put(act, val);
        }

        if (cb_lip_center_down.isSelected()) {
            Actuators act = Actuators.lip_center_lower;
            Float val = (float) lip_center_down.getValue() / 100;
            actuatorList.put(act, val);
        }

        if (cb_lip_center_up.isSelected()) {
            Actuators act = Actuators.lip_center_upper;
            Float val = (float) lip_center_up.getValue() / 100;
            actuatorList.put(act, val);
        }

        if (cb_lip_right.isSelected()) {
            System.out.println(Actuators.lip_right.toString());
            Actuators act = Actuators.lip_right_upper;
            Float val = (float) lip_right.getValue() / 100;
            actuatorList.put(act, val);
        }
        if (cb_lip_left.isSelected()) {
            System.out.println(Actuators.lip_left.toString());
            Actuators act = Actuators.lip_left_upper;
            Float val = (float) lip_left.getValue() / 100;
            actuatorList.put(act, val);
        }

        if (cb_neck_roll.isSelected()) {
            System.out.println(Actuators.neck_roll.toString());
            Actuators act = Actuators.neck_roll;
            Float val = (float) neck_roll.getValue() / 100;
            actuatorList.put(act, val);
        }

        if (cb_neck_tilt.isSelected()) {
            System.out.println(Actuators.neck_tilt.toString());
            Actuators act = Actuators.neck_tilt;
            Float val = (float) neck_tilt.getValue() / 100;
            actuatorList.put(act, val);
        }

        if (cb_neck_pan.isSelected()) {
            System.out.println(Actuators.neck_pan.toString());
            Actuators act = Actuators.neck_pan;
            Float val = (float) neck_pan.getValue() / 100;
            actuatorList.put(act, val);
        }
        if (cb_eye_tilt.isSelected()) {
            System.out.println(Actuators.eye_tilt.toString());
            Actuators act = Actuators.eye_tilt;
            Float val = (float) eye_tilt.getValue() / 100;
            actuatorList.put(act, val);
        }

        if (actuatorList.size() > 0) {
            try {
                r.executeMovement(actuatorList, Integer.parseInt(txtRamp.getText()), Integer.parseInt(txtSpeed.getText()));

                Document doc;

                Element newPos = new Element("Position");
                Attribute aId = new Attribute("id", String.valueOf(txtPosName.getText()));
                Attribute aRamp = new Attribute("ramp", String.valueOf(txtRamp.getText()));
                Attribute aSpeed = new Attribute("maxSpeed", String.valueOf(txtSpeed.getText()));

                newPos.addAttribute(aId);
                newPos.addAttribute(aRamp);
                newPos.addAttribute(aSpeed);

                for (Actuators a : actuatorList.keySet()) {
                    Element act = new Element("Actuator");
                    Attribute id = new Attribute("id", a.name());
                    Attribute target = new Attribute("target", String.valueOf(actuatorList.get(a)));
                    act.addAttribute(id);
                    act.addAttribute(target);
                    newPos.appendChild(act);
                }

                txtOut.setText(newPos.toXML());

//                doc.getRootElement().appendChild(newPos);

            } catch (IOException ex) {
                Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ExecutionException ex) {
                Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
            } catch (TimeoutException ex) {
                Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnTestActionPerformed

    private void cb_r_lid_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_r_lid_upActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_r_lid_upActionPerformed

    private void cb_r_lid_lowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_r_lid_lowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_r_lid_lowActionPerformed

    private void cb_l_lid_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_l_lid_upActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_l_lid_upActionPerformed

    private void cb_l_lid_lowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_l_lid_lowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_l_lid_lowActionPerformed

    private void cb_r_eyebrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_r_eyebrowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_r_eyebrowActionPerformed

    private void cb_l_eyebrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_l_eyebrowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_l_eyebrowActionPerformed

    private void txtPosNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPosNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPosNameActionPerformed

    private void eyebrow_rightPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_eyebrow_rightPropertyChange
    }//GEN-LAST:event_eyebrow_rightPropertyChange

    private void eyebrow_rightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_eyebrow_rightStateChanged
        lbl_eyebrow_right.setText(String.valueOf((float) eyebrow_right.getValue() / 100));
    }//GEN-LAST:event_eyebrow_rightStateChanged

    private void lid_r_upperStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lid_r_upperStateChanged
        lbl_lid_right_up.setText(String.valueOf((float) lid_r_upper.getValue() / 100));
    }//GEN-LAST:event_lid_r_upperStateChanged

    private void lid_r_lowerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lid_r_lowerStateChanged
        lbl_lid_right_down.setText(String.valueOf((float) lid_r_lower.getValue() / 100));
    }//GEN-LAST:event_lid_r_lowerStateChanged

    private void eyebrow_leftStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_eyebrow_leftStateChanged
        lbl_eyebrow_left.setText(String.valueOf((float) eyebrow_left.getValue() / 100));
    }//GEN-LAST:event_eyebrow_leftStateChanged

    private void lid_l_upperStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lid_l_upperStateChanged
        lbl_lid_left_up.setText(String.valueOf((float) lid_l_upper.getValue() / 100));
    }//GEN-LAST:event_lid_l_upperStateChanged

    private void lid_l_lowerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lid_l_lowerStateChanged
        lbl_lid_left_down.setText(String.valueOf((float) lid_l_lower.getValue() / 100));
    }//GEN-LAST:event_lid_l_lowerStateChanged

    private void lip_rightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lip_rightStateChanged
        lbl_lip_right.setText(String.valueOf((float) lip_right.getValue() / 100));
    }//GEN-LAST:event_lip_rightStateChanged

    private void cb_lip_rightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_lip_rightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_lip_rightActionPerformed

    private void lip_center_upStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lip_center_upStateChanged
        lbl_lip_center_up.setText(String.valueOf((float) lip_center_up.getValue() / 100));
    }//GEN-LAST:event_lip_center_upStateChanged

    private void cb_lip_center_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_lip_center_upActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_lip_center_upActionPerformed

    private void lip_center_downStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lip_center_downStateChanged
        lbl_lip_center_down.setText(String.valueOf((float) lip_center_down.getValue() / 100));
    }//GEN-LAST:event_lip_center_downStateChanged

    private void cb_lip_center_downActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_lip_center_downActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_lip_center_downActionPerformed

    private void lip_leftStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lip_leftStateChanged
        lbl_lip_left.setText(String.valueOf(((float) lip_left.getValue() / 100)));
    }//GEN-LAST:event_lip_leftStateChanged

    private void cb_lip_leftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_lip_leftActionPerformed
    }//GEN-LAST:event_cb_lip_leftActionPerformed

    private void txtSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSpeedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSpeedActionPerformed

    private void txtRampActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRampActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRampActionPerformed

    private void cbPosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbPosPropertyChange
    }//GEN-LAST:event_cbPosPropertyChange

    private void cbPosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbPosItemStateChanged
        if (cbPos.getSelectedItem() == null) {
            return;
        }

        System.out.println("Load: " + cbPos.getSelectedItem().toString());

        PositionElement pe = hp.getPosition(cbPos.getSelectedItem().toString());

        cb_eye_left.setSelected(false);
        cb_eye_right.setSelected(false);
        cb_eye_tilt.setSelected(false);
        cb_l_eyebrow.setSelected(false);
        cb_l_lid_low.setSelected(false);
        cb_l_lid_up.setSelected(false);
        cb_lip_center_down.setSelected(false);
        cb_lip_center_up.setSelected(false);
        cb_lip_left.setSelected(false);
        cb_lip_right.setSelected(false);
        cb_neck_pan.setSelected(false);
        cb_neck_roll.setSelected(false);
        cb_neck_tilt.setSelected(false);
        cb_r_eyebrow.setSelected(false);
        cb_r_lid_low.setSelected(false);
        cb_r_lid_up.setSelected(false);



        for (Actuators a : pe.getActuatorList().keySet()) {
            System.out.println("Set " + a.name());
            if (a.name().equals(Actuators.lip_center_lower.toString())) {
                lip_center_down.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_lip_center_down.setSelected(true);
            } else if (a.name().equals(Actuators.lip_center_upper.toString())) {
                lip_center_up.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_lip_center_up.setSelected(true);
            } else if (a.name().equals(Actuators.lip_right_upper.toString())) {
                lip_right.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_lip_right.setSelected(true);
            } else if (a.name().equals(Actuators.lip_left_upper.toString())) {
                lip_left.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_lip_left.setSelected(true);
            } else if (a.name().equals(Actuators.left_eyebrow.toString())) {
                eyebrow_left.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_l_eyebrow.setSelected(true);
            } else if (a.name().equals(Actuators.left_lid_lower.toString())) {
                lid_l_lower.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_l_lid_low.setSelected(true);
            } else if (a.name().equals(Actuators.left_lid_upper.toString())) {
                lid_l_upper.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_l_lid_up.setSelected(true);
            } else if (a.name().equals(Actuators.right_eyebrow.toString())) {
                eyebrow_right.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_r_eyebrow.setSelected(true);
            } else if (a.name().equals(Actuators.right_lid_lower.toString())) {
                lid_r_lower.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_r_lid_low.setSelected(true);
            } else if (a.name().equals(Actuators.right_lid_upper.toString())) {
                lid_r_upper.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_r_lid_up.setSelected(true);
            } else if (a.name().equals(Actuators.right_eye_pan.toString())) {
                eye_right.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_eye_right.setSelected(true);
            } else if (a.name().equals(Actuators.left_eye_pan.toString())) {
                eye_left.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_eye_left.setSelected(true);
            } else if (a.name().equals(Actuators.neck_pan.toString())) {
                neck_pan.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_neck_pan.setSelected(true);
            } else if (a.name().equals(Actuators.neck_roll.toString())) {
                neck_roll.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_neck_roll.setSelected(true);
            } else if (a.name().equals(Actuators.neck_tilt.toString())) {
                neck_tilt.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_neck_tilt.setSelected(true);
            } else if (a.name().equals(Actuators.eye_tilt.toString())) {
                eye_tilt.setValue((int) (pe.getActuatorList().get(a) * 100));
                cb_eye_tilt.setSelected(true);
            }

            txtSpeed.setText(String.valueOf(pe.getMaxSpeed()));
            txtRamp.setText(String.valueOf(pe.getRamp()));
            txtPosName.setText(pe.getPosName());
        }
    }//GEN-LAST:event_cbPosItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        hp = new HeadPositions();
        cbPos.removeAllItems();

//        for (String s : hp.getPositions().keySet()) {
//            cbPos.addItem(s);
//        }

        List<String> poses = new ArrayList();
        for (String s : hp.getPositions().keySet()) {
            poses.add(s);
            //cbPos.addItem(s);
        }
        Collections.sort(poses);
        for (String s : poses) {
            cbPos.addItem(s);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (txtPosName.getText().length() > 0) {

            // TODO add your handling code here:
            Map<Actuators, Float> actuatorList = new EnumMap<Actuators, Float>(Actuators.class);

            if (cb_l_lid_up.isSelected()) {
                Actuators act = Actuators.left_lid_upper;
                Float val = (float) lid_l_upper.getValue() / 100;
                actuatorList.put(act, val);
            }

            if (cb_l_lid_low.isSelected()) {
                Actuators act = Actuators.left_lid_lower;
                Float val = (float) lid_l_lower.getValue() / 100;
                actuatorList.put(act, val);
            }

            if (cb_r_lid_up.isSelected()) {
                Actuators act = Actuators.right_lid_upper;
                Float val = (float) lid_r_upper.getValue() / 100;
                actuatorList.put(act, val);
            }

            if (cb_r_lid_low.isSelected()) {
                Actuators act = Actuators.right_lid_lower;
                Float val = (float) lid_r_lower.getValue() / 100;
                actuatorList.put(act, val);
            }

            if (cb_l_eyebrow.isSelected()) {
                Actuators act = Actuators.left_eyebrow;
                Float val = (float) eyebrow_left.getValue() / 100;
                actuatorList.put(act, val);
            }

            if (cb_r_eyebrow.isSelected()) {
                Actuators act = Actuators.right_eyebrow;
                Float val = (float) eyebrow_right.getValue() / 100;
                actuatorList.put(act, val);
            }
            if (cb_eye_left.isSelected()) {
                Actuators act = Actuators.left_eye_pan;
                Float val = (float) eye_left.getValue() / 100;
                actuatorList.put(act, val);
            }
            if (cb_eye_right.isSelected()) {
                Actuators act = Actuators.right_eye_pan;
                Float val = (float) eye_right.getValue() / 100;
                actuatorList.put(act, val);
            }

            if (cb_lip_center_down.isSelected()) {
                Actuators act = Actuators.lip_center_lower;
                Float val = (float) lip_center_down.getValue() / 100;
                actuatorList.put(act, val);
            }

            if (cb_lip_center_up.isSelected()) {
                Actuators act = Actuators.lip_center_upper;
                Float val = (float) lip_center_up.getValue() / 100;
                actuatorList.put(act, val);
            }

            if (cb_lip_right.isSelected()) {
                Actuators act = Actuators.lip_right_upper;
                Float val = (float) lip_right.getValue() / 100;
                actuatorList.put(act, val);
            }
            if (cb_lip_left.isSelected()) {
                System.out.println(Actuators.lip_left.toString());
                Actuators act = Actuators.lip_left_upper;
                Float val = (float) lip_left.getValue() / 100;
                actuatorList.put(act, val);
            }//eyetilt
            if (cb_eye_tilt.isSelected()) {
                System.out.println(Actuators.eye_tilt.toString());
                Actuators act = Actuators.eye_tilt;
                Float val = (float) eye_tilt.getValue() / 100;
                actuatorList.put(act, val);
            }//neck pan
            if (cb_neck_pan.isSelected()) {
                System.out.println(Actuators.neck_pan.toString());
                Actuators act = Actuators.neck_pan;
                Float val = (float) neck_pan.getValue() / 100;
                actuatorList.put(act, val);
            }//neck tilt
            if (cb_neck_tilt.isSelected()) {
                System.out.println(Actuators.neck_tilt.toString());
                Actuators act = Actuators.neck_tilt;
                Float val = (float) neck_tilt.getValue() / 100;
                actuatorList.put(act, val);
            }//neck roll
            if (cb_neck_roll.isSelected()) {
                System.out.println(Actuators.neck_roll.toString());
                Actuators act = Actuators.neck_roll;
                Float val = (float) neck_roll.getValue() / 100;
                actuatorList.put(act, val);
            }

            if (cb_neck_roll.isSelected()) {
                System.out.println(Actuators.neck_roll.toString());
                Actuators act = Actuators.neck_roll;
                Float val = (float) neck_roll.getValue() / 100;
                actuatorList.put(act, val);
            }

            if (cb_neck_tilt.isSelected()) {
                System.out.println(Actuators.neck_tilt.toString());
                Actuators act = Actuators.neck_tilt;
                Float val = (float) neck_tilt.getValue() / 100;
                actuatorList.put(act, val);
            }

            if (cb_neck_pan.isSelected()) {
                System.out.println(Actuators.neck_pan.toString());
                Actuators act = Actuators.neck_pan;
                Float val = (float) neck_pan.getValue() / 100;
                actuatorList.put(act, val);
            }

            if (cb_eye_tilt.isSelected()) {
                Actuators act = Actuators.eye_tilt;
                Float val = (float) eye_tilt.getValue() / 100;
                actuatorList.put(act, val);
            }

            if (actuatorList.size() == 0) {
                System.out.println("No Elements to write. Stopping.");
                return;
            }

            try {
                hp.savePosition(txtPosName.getText(), actuatorList, Integer.parseInt(txtRamp.getText()), Integer.parseInt(txtSpeed.getText()));
            } catch (ParsingException ex) {
                System.out.println("Ex " + ex.getMessage());
                Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                System.out.println("Ex " + ex.getMessage());
                Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
            }
//            hp = new HeadPositions();
//            cbPos.removeAllItems();
//            for (String s : hp.getPositions().keySet()) {
//                cbPos.addItem(s);
//            }

        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void cb_eye_leftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_eye_leftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_eye_leftActionPerformed

    private void eye_leftStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_eye_leftStateChanged
        lbl_eye_left.setText(String.valueOf(((float) eye_left.getValue() / 100)));
    }//GEN-LAST:event_eye_leftStateChanged

    private void cb_eye_rightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_eye_rightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_eye_rightActionPerformed

    private void eye_rightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_eye_rightStateChanged
        lbl_eye_right.setText(String.valueOf(((float) eye_right.getValue() / 100)));
    }//GEN-LAST:event_eye_rightStateChanged

    private void neck_rollStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_neck_rollStateChanged
        lbl_neck_roll.setText(String.valueOf(((float) neck_roll.getValue() / 100)));
    }//GEN-LAST:event_neck_rollStateChanged

    private void neck_tiltStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_neck_tiltStateChanged
        lbl_neck_tilt.setText(String.valueOf(((float) neck_tilt.getValue() / 100)));
    }//GEN-LAST:event_neck_tiltStateChanged

    private void neck_panStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_neck_panStateChanged
        lbl_neck_pan.setText(String.valueOf(((float) neck_pan.getValue() / 100)));
    }//GEN-LAST:event_neck_panStateChanged
    private void cb_eye_tiltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_eye_tiltActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_eye_tiltActionPerformed

    private void eye_tiltStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_eye_tiltStateChanged
        lbl_eye_tilt.setText(String.valueOf(((float) eye_tilt.getValue() / 100)));
    }//GEN-LAST:event_eye_tiltStateChanged

    private void btnSurprisedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSurprisedActionPerformed
        try {
            r.executeMovement(hp.getPosition("showSurprised").getActuatorList(), Integer.parseInt(txtRamp.getText()), Integer.parseInt(txtSpeed.getText()));
        } catch (IOException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ExecutionException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TimeoutException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSurprisedActionPerformed

    private void btnNeutralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNeutralActionPerformed
        try {
            r.executeMovement(hp.getPosition("showNeutral").getActuatorList(), Integer.parseInt(txtRamp.getText()), Integer.parseInt(txtSpeed.getText()));
        } catch (IOException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ExecutionException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TimeoutException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNeutralActionPerformed

    private void btnHappyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHappyActionPerformed
        try {
            r.executeMovement(hp.getPosition("showHappy").getActuatorList(), Integer.parseInt(txtRamp.getText()), Integer.parseInt(txtSpeed.getText()));
        } catch (IOException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ExecutionException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TimeoutException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnHappyActionPerformed

    private void btnAngryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAngryActionPerformed
        try {
            r.executeMovement(hp.getPosition("showAngry").getActuatorList(), Integer.parseInt(txtRamp.getText()), Integer.parseInt(txtSpeed.getText()));
        } catch (IOException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ExecutionException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TimeoutException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAngryActionPerformed

    private void btnSadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSadActionPerformed
        try {
            r.executeMovement(hp.getPosition("showSad").getActuatorList(), Integer.parseInt(txtRamp.getText()), Integer.parseInt(txtSpeed.getText()));
        } catch (IOException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ExecutionException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TimeoutException ex) {
            Logger.getLogger(HCGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HCGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HCGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HCGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HCGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         cb_eye_left1 display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HCGui().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAngry;
    private javax.swing.JButton btnHappy;
    private javax.swing.JButton btnNeutral;
    private javax.swing.JButton btnSad;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSurprised;
    private javax.swing.JButton btnTest;
    private javax.swing.JComboBox cbPos;
    private javax.swing.JCheckBox cb_eye_left;
    private javax.swing.JCheckBox cb_eye_right;
    private javax.swing.JCheckBox cb_eye_tilt;
    private javax.swing.JCheckBox cb_l_eyebrow;
    private javax.swing.JCheckBox cb_l_lid_low;
    private javax.swing.JCheckBox cb_l_lid_up;
    private javax.swing.JCheckBox cb_lip_center_down;
    private javax.swing.JCheckBox cb_lip_center_up;
    private javax.swing.JCheckBox cb_lip_left;
    private javax.swing.JCheckBox cb_lip_right;
    private javax.swing.JCheckBox cb_neck_pan;
    private javax.swing.JCheckBox cb_neck_roll;
    private javax.swing.JCheckBox cb_neck_tilt;
    private javax.swing.JCheckBox cb_r_eyebrow;
    private javax.swing.JCheckBox cb_r_lid_low;
    private javax.swing.JCheckBox cb_r_lid_up;
    private javax.swing.JSlider eye_left;
    private javax.swing.JSlider eye_right;
    private javax.swing.JSlider eye_tilt;
    private javax.swing.JSlider eyebrow_left;
    private javax.swing.JSlider eyebrow_right;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl_eye_left;
    private javax.swing.JLabel lbl_eye_right;
    private javax.swing.JLabel lbl_eye_tilt;
    private javax.swing.JLabel lbl_eyebrow_left;
    private javax.swing.JLabel lbl_eyebrow_right;
    private javax.swing.JLabel lbl_lid_left_down;
    private javax.swing.JLabel lbl_lid_left_up;
    private javax.swing.JLabel lbl_lid_right_down;
    private javax.swing.JLabel lbl_lid_right_up;
    private javax.swing.JLabel lbl_lip_center_down;
    private javax.swing.JLabel lbl_lip_center_up;
    private javax.swing.JLabel lbl_lip_left;
    private javax.swing.JLabel lbl_lip_right;
    private javax.swing.JLabel lbl_neck_pan;
    private javax.swing.JLabel lbl_neck_roll;
    private javax.swing.JLabel lbl_neck_tilt;
    private javax.swing.JSlider lid_l_lower;
    private javax.swing.JSlider lid_l_upper;
    private javax.swing.JSlider lid_r_lower;
    private javax.swing.JSlider lid_r_upper;
    private javax.swing.JSlider lip_center_down;
    private javax.swing.JSlider lip_center_up;
    private javax.swing.JSlider lip_left;
    private javax.swing.JSlider lip_right;
    private javax.swing.JSlider neck_pan;
    private javax.swing.JSlider neck_roll;
    private javax.swing.JSlider neck_tilt;
    private javax.swing.JTextArea txtOut;
    private javax.swing.JTextField txtPosName;
    private javax.swing.JTextField txtRamp;
    private javax.swing.JTextField txtSpeed;
    private javax.swing.JTextField txt_eye_ramp;
    private javax.swing.JTextField txt_eye_speed;
    private javax.swing.JTextField txt_eyebrow_Speed;
    private javax.swing.JTextField txt_eyebrow_ramp;
    private javax.swing.JTextField txt_lid_ramp;
    private javax.swing.JTextField txt_lid_speed;
    private javax.swing.JTextField txt_lip_ramp;
    private javax.swing.JTextField txt_lip_speed;
    private javax.swing.JTextField txt_neck_ramp;
    private javax.swing.JTextField txt_neck_speed;
    // End of variables declaration//GEN-END:variables
}
